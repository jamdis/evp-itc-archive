{"id": "17998", "subject": "Verifying tests", "author": "John S", "timestamp": "2010-07-11T15:01:19Z", "full_text": "--0-535318496-1278860479=:99047\r\nContent-Type: text/plain; charset=us-ascii\r\n\r\nThere is a good way to verify a file irrespective of its contents without \nrevealing the contents.\nThis technique is used in the software distribution business to ensure files \nhave not been\ncontaminated prior to or during a download.\n\nWhat you do is make a &#39;digital hash&#39; of the files contents. This renders a long \nhexadecimal\nnumber which is reasonably unique and will change if the file or file contents \nare changed.\n\nThe experimenter can then take a picture for example, create the MD5 hash and \nsend that\nhash out as proof of the file&#39;s contents, without revealing the picture content \nin this case.\n\nLater, once the picture is posted, anyone can run a similar hashing program \nagainst the\nfile to confirm they have the same file whose hash was posted by the \nexperimenter \n\noriginally. Hence you know what you see is a valid copy of the original (picture \nin this case).\n\nThe software is available free on the Internet. One example of many may be found \nat:\nhttp://www.fileformat.info/tool/hash.htm\n\nYou don&#39;t even have to download it. Just click the browse button to open a file \non your\ncomputer and the program displays a large variety of hashes including the MD5 \nhash.\nThis is one example of how this could be done.\n\n\n      \r\n--0-535318496-1278860479=:99047\r\nContent-Type: text/html; charset=us-ascii\r\n\r\n&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;&lt;!-- DIV {margin:0px;} --&gt;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=&quot;font-family:arial, helvetica, sans-serif;font-size:10pt&quot;&gt;&lt;DIV&gt;There is a good way to verify a file irrespective of its contents without revealing the contents.&lt;/DIV&gt;\n&lt;DIV&gt;This technique is used in the software distribution business to ensure files have not been&lt;/DIV&gt;\n&lt;DIV&gt;contaminated prior to or during a download.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;What you do is make a &#39;digital hash&#39; of the files contents. This renders a long hexadecimal&lt;/DIV&gt;\n&lt;DIV&gt;number which is reasonably unique and will change if the file or file contents are changed.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;The experimenter can then take a picture for example, create the MD5 hash and send that&lt;/DIV&gt;\n&lt;DIV&gt;hash out as proof of the file&#39;s contents, without revealing the picture content in this case.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;Later, once the picture is posted, anyone can run a similar hashing program against the&lt;/DIV&gt;\n&lt;DIV&gt;file to confirm they have the same file whose hash was posted by the experimenter &lt;/DIV&gt;\n&lt;DIV&gt;originally. Hence you know what you see is a valid copy of the original (picture in this case).&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;The software is available free on the Internet. One example of many may be found at:&lt;/DIV&gt;\n&lt;DIV&gt;&lt;A href=&quot;http://www.fileformat.info/tool/hash.htm&quot;&gt;http://www.fileformat.info/tool/hash.htm&lt;/A&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;You don&#39;t even have to download it. Just click the browse button to open a file on your&lt;/DIV&gt;\n&lt;DIV&gt;computer and the program displays a large variety of hashes including the MD5 hash.&lt;/DIV&gt;\n&lt;DIV&gt;This is one example of how this could be done.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;&lt;/div&gt;&lt;br&gt;\n\n      &lt;/body&gt;&lt;/html&gt;\r\n--0-535318496-1278860479=:99047--"}